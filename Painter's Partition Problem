bool possible(vector<int>arr, int n, int k, int mid){
    int p=1;
    int psum=0;
    for(int i=0;i<n;i++){
        if(psum+arr[i]<=mid){
            psum+=arr[i];
        }
        else{
            p++;
            if(p>k || arr[i]>mid) return false;
            psum=arr[i];
        }
    }
    return true;
}

int findLargestMinDistance(vector<int> &boards, int k)
{
    int s=0;
    int n=boards.size();
    int sum=accumulate(begin(boards),end(boards),0);
    int e=sum;
    int ans=-1;
    while(s<=e){
        int mid=s+(e-s)/2;
        if(possible(boards,n,k,mid)){
            ans=mid;
            e=mid-1;
        }
        else{
            s=mid+1;
        }
    }
    return ans;
}

bool possible(vector<int> &arr, int n, int k, int mid){
    int c=1;
    int dist=arr[0];
    for(int i=0;i<n;i++){
        if(arr[i]-dist>=mid){
            c++;
            if(c==k)return true;
            dist=arr[i];
        }
    }
    return false;
}

int aggressiveCows(vector<int> &arr, int k)
{
    //    Write your code here.
    int s=0;
    int n=arr.size();
    sort(arr.begin(),arr.end());
    int maxi = *max_element(arr.begin(),arr.end());
    int e=maxi;
    int ans=-1;
    while(s<=e){
        int mid=s+(e-s)/2;
        if(possible(arr,n,k,mid)){
            ans=mid;
            s=mid+1;
        }
        else{
            e=mid-1;
        }
    }
    return ans;
}
